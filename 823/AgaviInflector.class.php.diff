Index: util/AgaviInflector.class.php
===================================================================
--- util/AgaviInflector.class.php
+++ util/AgaviInflector.class.php
@@ -20,6 +20,7 @@
  * @subpackage util
  *
  * @author     Dominik del Bondio <ddb@bitxtender.com>
+ * @author     Thomas Bachem <mail@thomasbachem.com>
  * @copyright  Authors
  * @copyright  The Agavi Project
  *
@@ -97,18 +98,28 @@
 	);
 
 	/**
-	 * @var        array An array of uncountable nouns
+	 * @var        array An array of uncountable nouns as keys
 	 */
 	protected static $uncountables = array(
-		'equipment',
-		'information',
-		'rice',
-		'money',
-		'species',
-		'series',
-		'fish',
-		'sheep',
+		'equipment' => true,
+		'information' => true,
+		'rice' => true,
+		'money' => true,
+		'species' => true,
+		'series' => true,
+		'fish' => true,
+		'sheep' => true,
 	);
+	
+	/**
+	 * @var        array An array remembering the results of singularize()
+	 */
+	protected static $singularizeCache = array();
+	
+	/**
+	 * @var        array An array remembering the results of pluralize()
+	 */
+	protected static $pluralizeCache = array();
 
 	/**
 	 * Translates a noun from its plural form in its singular form
@@ -118,21 +129,31 @@
 	 * @return     string The singular form of the word
 	 *
 	 * @author     Dominik del Bondio <ddb@bitxtender.com>
+	 * @author     Thomas Bachem <mail@thomasbachem.com>
 	 * @since      0.11.0
 	 */
 	public static function singularize($word)
 	{
-		if(in_array($word, self::$uncountables)) {
+		if(isset(self::$singularizeCache[$word])) {
+			return self::$singularizeCache[$word];
+		}
+		
+		if(isset(self::$uncountables[$word])) {
 			return $word;
 		}
 
+		$count = 0;
+		$singularizedWord = $word;
 		foreach(self::$pluralMatches as $regexp => $replacement) {
-			if(preg_match($regexp, $word)) {
-				$word = preg_replace($regexp, $replacement, $word);
+			$singularizedWord = preg_replace($regexp, $replacement, $word, 1, $count);
+			if($count) {
 				break;
 			}
 		}
-		return $word;
+		
+		self::$singularizeCache[$word] = $singularizedWord;
+		
+		return $singularizedWord;
 	}
 
 	/**
@@ -143,21 +164,31 @@
 	 * @return     string The plural form of the word
 	 *
 	 * @author     Dominik del Bondio <ddb@bitxtender.com>
+	 * @author     Thomas Bachem <mail@thomasbachem.com>
 	 * @since      0.11.0
 	 */
 	public static function pluralize($word)
 	{
-		if(in_array($word, self::$uncountables)) {
+		if(isset(self::$pluralizeCache[$word])) {
+			return self::$pluralizeCache[$word];
+		}
+		
+		if(isset(self::$uncountables[$word])) {
 			return $word;
 		}
 
+		$count = 0;
+		$pluralizedWord = $word;
 		foreach(self::$singularMatches as $regexp => $replacement) {
-			if(preg_match($regexp, $word)) {
-				$word = preg_replace($regexp, $replacement, $word);
+			$pluralizedWord = preg_replace($regexp, $replacement, $pluralizedWord, 1, $count);
+			if($count) {
 				break;
 			}
 		}
-		return $word;
+		
+		self::$pluralizeCache[$word] = $pluralizedWord;
+		
+		return $pluralizedWord;
 	}
 }
 
